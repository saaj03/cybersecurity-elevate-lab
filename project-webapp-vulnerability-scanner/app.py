from flask import Flask, request, render_template_string, send_file
import scanner
import reporter
import os

app = Flask(__name__)

@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        url = request.form["url"].strip()
        if not url.startswith("http"):
            url = "http://" + url   # auto-fix if user forgets http

        # Run scan
        results = scanner.scan(url)

        # Save reports
        reporter.save_html(results, "report.html")
        reporter.save_json(results, "report.json")
        reporter.save_csv(results, "report.csv")

        # Render results as a table
        return render_template_string("""
        <h2>Results for {{url}}</h2>
        {% if results %}
          <table border="1" cellpadding="5" cellspacing="0">
            <tr><th>Vulnerability</th><th>Tested URL</th><th>Payload / Detail</th></tr>
            {% for vuln, test_url, payload in results %}
              <tr>
                <td>{{vuln}}</td>
                <td>{{test_url}}</td>
                <td>{{payload}}</td>
              </tr>
            {% endfor %}
          </table>
        {% else %}
          <p>No vulnerabilities found.</p>
        {% endif %}
        <br>
        <a href="/report/html">Download HTML Report</a> | 
        <a href="/report/json">Download JSON Report</a> | 
        <a href="/report/csv">Download CSV Report</a>
        <br><br>
        <a href="/">‚Üê Back</a>
        """, url=url, results=results)

    # Show form when first opening page
    return """
    <h2>WebApp Vulnerability Scanner</h2>
    <form method="post">
      <input name="url" placeholder="http://target.com" size=40>
      <button type="submit">Scan</button>
    </form>
    """

# Download report routes
@app.route("/report/<fmt>")
def report(fmt):
    filename = f"report.{fmt}"
    if os.path.exists(filename):
        return send_file(filename, as_attachment=True)
    return f"No {fmt.upper()} report found. Run a scan first."

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
